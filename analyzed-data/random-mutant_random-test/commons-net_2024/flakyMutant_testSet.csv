mutant(except tests),round-0,round-1,round-2,round-3,round-4,round-5
"('org.apache.commons.net.io.FromNetASCIIOutputStream', 'close', '()V', '4', 'org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator', 'FromNetASCIIOutputStream.java', '0', '53', 'negated conditional')","{120, 119}","{120, 119}","{120, 119}","{120, 122, 119}","{120, 119}","{120, 122, 119}"
"('org.apache.commons.net.io.FromNetASCIIOutputStream', 'close', '()V', '17', 'org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator', 'FromNetASCIIOutputStream.java', '3', '58', 'negated conditional')","{120, 119}","{120, 119}","{120, 119}","{120, 122, 119}","{120, 119}","{120, 122, 119}"
"('org.apache.commons.net.io.FromNetASCIIOutputStream', 'close', '()V', '28', 'org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator', 'FromNetASCIIOutputStream.java', '5', '61', 'removed call to java/io/FilterOutputStream::close')","{120, 119}","{120, 119}","{120, 119}","{120, 122, 119}","{120, 119}","{120, 122, 119}"
"('org.apache.commons.net.finger.FingerClient', '<init>', '()V', '9', 'org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator', 'FingerClient.java', '1', '59', 'removed call to org/apache/commons/net/finger/FingerClient::setDefaultPort')","{425, 106, 426, 427, 110, 114, 115, 116}","{425, 106, 426, 427, 110, 114, 115, 116}","{425, 106, 426, 427, 110, 114, 115, 116}","{425, 106, 427, 426, 110, 114, 115, 116}","{425, 106, 426, 427, 110, 114, 115, 116}",
"('org.apache.commons.net.finger.FingerClient', 'getInputStream', '(ZLjava/lang/String;Ljava/lang/String;)Ljava/io/InputStream;', '11', 'org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator', 'FingerClient.java', '1', '101', 'negated conditional')","{426, 116}","{426, 116}","{426, 116}","{426, 116}","{426, 116}",
"('org.apache.commons.net.echo.EchoUDPClient', 'receive', '([BI)I', '12', 'org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator', 'EchoUDPClient.java', '1', '65', 'removed call to java/net/DatagramPacket::setLength')",{395},,{395},,{395},{395}
"('org.apache.commons.net.echo.EchoUDPClient', 'receive', '([BI)I', '6', 'org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator', 'EchoUDPClient.java', '0', '64', 'removed call to java/net/DatagramPacket::setData')",{395},,{395},,{395},{395}
"('org.apache.commons.net.echo.EchoUDPClient', 'send', '([BILjava/net/InetAddress;)V', '8', 'org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator', 'EchoUDPClient.java', '0', '86', 'removed call to org/apache/commons/net/echo/EchoUDPClient::send')",{397},,{397},,{397},{397}
"('org.apache.commons.net.echo.EchoUDPClient', 'send', '([BLjava/net/InetAddress;)V', '9', 'org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator', 'EchoUDPClient.java', '0', '73', 'removed call to org/apache/commons/net/echo/EchoUDPClient::send')",{397},,{397},,{397},{397}
"('org.apache.commons.net.echo.EchoTCPClient', '<init>', '()V', '9', 'org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator', 'EchoTCPClient.java', '1', '42', 'removed call to org/apache/commons/net/echo/EchoTCPClient::setDefaultPort')","{112, 466}","{112, 466}",,,,
"('org.apache.commons.net.echo.EchoTCPClient', 'getInputStream', '()Ljava/io/InputStream;', '5', 'org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator', 'EchoTCPClient.java', '0', '52', 'replaced return value with null for org/apache/commons/net/echo/EchoTCPClient::getInputStream')",{466},{466},,,,
"('org.apache.commons.net.nntp.Threader', 'thread', '(Ljava/lang/Iterable;)Lorg/apache/commons/net/nntp/Threadable;', '50', 'org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator', 'Threader.java', '13', '373', 'negated conditional')",,"{467, 468, 469}","{467, 468, 469}","{467, 468, 469}","{467, 468, 469}","{467, 468, 469}"
"('org.apache.commons.net.nntp.Threader', 'thread', '(Ljava/lang/Iterable;)Lorg/apache/commons/net/nntp/Threadable;', '4', 'org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator', 'Threader.java', '0', '360', 'negated conditional')",,"{467, 468, 469, 470, 471}","{467, 468, 469, 470, 471}","{467, 468, 469, 470, 471}","{467, 468, 469, 470, 471}","{467, 468, 469, 470, 471}"
"('org.apache.commons.net.nntp.Threader', 'thread', '([Lorg/apache/commons/net/nntp/Threadable;)Lorg/apache/commons/net/nntp/Threadable;', '16', 'org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator', 'Threader.java', '4', '427', 'replaced return value with null for org/apache/commons/net/nntp/Threader::thread')",,{467},{467},{467},{467},{467}
"('org.apache.commons.net.nntp.Threader', 'thread', '(Ljava/util/List;)Lorg/apache/commons/net/nntp/Threadable;', '6', 'org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator', 'Threader.java', '1', '410', 'replaced return value with null for org/apache/commons/net/nntp/Threader::thread')",,"{467, 468, 470}","{467, 468, 470}","{467, 468, 470}","{467, 468, 470}","{467, 468, 470}"
"('org.apache.commons.net.imap.AuthenticatingIMAPClient$AUTH_METHOD', 'getAuthName', '()Ljava/lang/String;', '5', 'org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator', 'AuthenticatingIMAPClient.java', '0', '69', 'replaced return value with """" for org/apache/commons/net/imap/AuthenticatingIMAPClient$AUTH_METHOD::getAuthName')",,"{472, 473, 474, 475, 476, 477}",,"{472, 473, 474, 475, 476, 477}",,"{472, 473, 474, 475, 476, 477}"
"('org.apache.commons.net.bsd.RCommandClient', '<init>', '()V', '9', 'org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator', 'RCommandClient.java', '1', '83', 'removed call to org/apache/commons/net/bsd/RCommandClient::setDefaultPort')",,,"{331, 107, 108, 333, 332, 336}",,"{331, 107, 108, 333, 332, 336}","{331, 107, 108, 333, 332, 336}"
"('org.apache.commons.net.nntp.Threader', 'thread', '([Lorg/apache/commons/net/nntp/Threadable;)Lorg/apache/commons/net/nntp/Threadable;', '4', 'org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator', 'Threader.java', '0', '424', 'negated conditional')",,,,"{467, 478}",,"{467, 478}"
