mutant(except tests),round-0,round-1,round-2,round-3,round-4,round-5
"('org.apache.empire.db.DBDatabase', 'register', '(Ljava/lang/String;)V', '176', 'org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator', 'DBDatabase.java', '56', '266', 'negated conditional')","{33, 3, 40, 13, 45, 47, 48, 26, 27, 30}","{33, 3, 40, 13, 45, 47, 48, 26, 27, 30}","{33, 3, 4, 7, 40, 45, 13, 48, 27, 30}","{33, 3, 4, 7, 40, 45, 13, 48, 27, 30}","{33, 3, 4, 40, 45, 13, 47, 48, 26, 27, 30}","{0, 33, 3, 4, 7, 40, 45, 13, 47, 48, 26, 27, 30}"
"('org.apache.empire.db.DBDatabase', 'register', '(Ljava/lang/String;)V', '163', 'org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator', 'DBDatabase.java', '52', '263', 'negated conditional')","{32, 33, 3, 58, 5, 4, 40, 9, 13, 45, 47, 48, 14, 26, 27, 30}","{32, 33, 3, 4, 5, 58, 40, 9, 45, 14, 47, 48, 13, 26, 27, 30}","{32, 33, 3, 4, 5, 7, 40, 9, 45, 13, 47, 48, 14, 58, 27, 30}","{32, 33, 3, 4, 5, 7, 40, 9, 45, 13, 47, 48, 14, 58, 27, 30}","{0, 33, 32, 26, 3, 5, 4, 40, 9, 13, 14, 47, 48, 45, 58, 27, 30}","{32, 0, 33, 26, 4, 5, 3, 7, 40, 9, 45, 14, 47, 13, 48, 58, 27, 30}"
"('org.apache.empire.db.DBDatabase', 'register', '(Ljava/lang/String;)V', '198', 'org.pitest.mutationtest.engine.gregor.mutators.MathMutator', 'DBDatabase.java', '62', '271', 'Replaced integer addition with subtraction')","{32, 33, 3, 4, 5, 26, 40, 9, 45, 14, 47, 48, 13, 58, 27, 30}","{32, 33, 3, 26, 5, 4, 40, 9, 13, 14, 47, 48, 45, 58, 27, 30}","{32, 33, 3, 4, 5, 7, 40, 9, 13, 45, 14, 48, 47, 58, 27, 30}","{32, 33, 3, 4, 5, 7, 40, 9, 13, 45, 14, 48, 47, 58, 27, 30}","{32, 33, 0, 3, 58, 5, 4, 40, 9, 13, 45, 47, 48, 14, 26, 27, 30}","{32, 33, 0, 3, 4, 5, 26, 7, 40, 9, 13, 45, 14, 48, 47, 58, 27, 30}"
"('org.apache.empire.db.DBDatabase', 'register', '(Ljava/lang/String;)V', '176', 'org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator', 'DBDatabase.java', '56', '266', 'changed conditional boundary')","{33, 3, 40, 45, 13, 47, 48, 26, 27, 30}","{33, 3, 40, 13, 45, 47, 48, 26, 27, 30}","{33, 3, 4, 7, 40, 13, 45, 48, 27, 30}","{33, 3, 4, 7, 40, 13, 45, 48, 27, 30}","{33, 3, 4, 40, 13, 45, 47, 48, 26, 27, 30}","{0, 33, 3, 4, 7, 40, 13, 45, 47, 48, 26, 27, 30}"
"('org.apache.empire.db.DBDatabase', 'findByIdentifier', '(Ljava/lang/String;)Lorg/apache/empire/db/DBDatabase;', '43', 'org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator', 'DBDatabase.java', '8', '130', 'replaced return value with null for org/apache/empire/db/DBDatabase::findByIdentifier')","{32, 33, 3, 4, 58, 5, 40, 9, 13, 14, 47, 45, 48, 57, 26, 27, 30}","{32, 33, 26, 4, 3, 5, 40, 9, 13, 14, 47, 48, 45, 57, 58, 27, 30}","{32, 33, 3, 4, 5, 7, 40, 9, 45, 14, 13, 48, 47, 57, 58, 27, 30}","{32, 33, 3, 4, 5, 7, 40, 9, 45, 14, 13, 48, 47, 57, 58, 27, 30}","{32, 33, 0, 26, 4, 3, 5, 40, 9, 13, 14, 47, 48, 45, 57, 58, 27, 30}","{0, 3, 4, 5, 7, 9, 13, 14, 26, 27, 30, 32, 33, 40, 45, 47, 48, 57, 58}"
"('org.apache.empire.db.DBDatabase', 'findByIdentifier', '(Ljava/lang/String;)Lorg/apache/empire/db/DBDatabase;', '26', 'org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator', 'DBDatabase.java', '4', '125', 'negated conditional')","{32, 33, 3, 4, 5, 58, 40, 9, 45, 13, 14, 48, 47, 57, 26, 27, 30}","{32, 33, 3, 4, 5, 26, 40, 9, 13, 45, 47, 48, 14, 57, 58, 27, 30}","{32, 33, 3, 4, 5, 7, 40, 9, 13, 45, 47, 48, 14, 57, 58, 27, 30}","{32, 33, 3, 4, 5, 7, 40, 9, 13, 45, 47, 48, 14, 57, 58, 27, 30}","{0, 33, 32, 26, 4, 5, 3, 40, 9, 13, 45, 47, 48, 14, 57, 58, 27, 30}","{0, 3, 4, 5, 7, 9, 13, 14, 26, 27, 30, 32, 33, 40, 45, 47, 48, 57, 58}"
"('org.apache.empire.db.DBDatabase', 'register', '(Ljava/lang/String;)V', '147', 'org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator', 'DBDatabase.java', '48', '258', 'negated conditional')","{32, 33, 3, 4, 58, 5, 40, 9, 13, 14, 47, 48, 45, 26, 27, 30}","{32, 33, 3, 58, 5, 4, 40, 9, 13, 14, 45, 48, 47, 26, 27, 30}","{32, 33, 3, 4, 5, 7, 40, 9, 13, 14, 47, 48, 45, 58, 27, 30}","{32, 33, 3, 4, 5, 7, 40, 9, 13, 14, 47, 48, 45, 58, 27, 30}","{0, 33, 32, 26, 4, 5, 3, 40, 9, 45, 13, 14, 48, 47, 58, 27, 30}","{32, 33, 0, 3, 26, 5, 4, 7, 40, 9, 45, 14, 47, 48, 13, 58, 27, 30}"
"('org.apache.empire.db.expr.column.DBFuncExpr', '<init>', '(Lorg/apache/empire/db/DBColumnExpr;Lorg/apache/empire/dbms/DBSqlPhrase;[Ljava/lang/Object;Lorg/apache/empire/data/DataType;)V', '58', 'org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator', 'DBFuncExpr.java', '13', '83', 'negated conditional')",{3},{3},{3},,{3},{3}
"('org.apache.empire.db.expr.column.DBFuncExpr', 'getFunctionName', '()Ljava/lang/String;', '5', 'org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator', 'DBFuncExpr.java', '0', '115', 'negated conditional')",{3},{3},{3},,{3},{3}
"('org.apache.empire.db.expr.column.DBFuncExpr', '<init>', '(Lorg/apache/empire/db/DBColumnExpr;Lorg/apache/empire/dbms/DBSqlPhrase;[Ljava/lang/Object;Lorg/apache/empire/data/DataType;)V', '28', 'org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator', 'DBFuncExpr.java', '4', '76', 'negated conditional')",{3},{3},{3},,{3},{3}
"('org.apache.empire.db.expr.column.DBFuncExpr', '<init>', '(Lorg/apache/empire/db/DBColumnExpr;Lorg/apache/empire/dbms/DBSqlPhrase;[Ljava/lang/Object;Lorg/apache/empire/data/DataType;)V', '42', 'org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator', 'DBFuncExpr.java', '8', '79', 'negated conditional')",{3},{3},{3},,{3},{3}
"('org.apache.empire.db.expr.column.DBFuncExpr', 'getFunctionName', '()Ljava/lang/String;', '11', 'org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator', 'DBFuncExpr.java', '2', '117', 'replaced return value with """" for org/apache/empire/db/expr/column/DBFuncExpr::getFunctionName')",{3},{3},{3},,{3},{3}
"('org.apache.empire.dbms.mysql.DBMSHandlerMySQL$DBCommandMySQL', 'getSelect', '(Lorg/apache/empire/db/DBSQLBuilder;)V', '10', 'org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator', 'DBMSHandlerMySQL.java', '1', '101', 'changed conditional boundary')",{0},{0},,{0},{0},{0}
"('org.apache.empire.dbms.mysql.DBMSHandlerMySQL$DBCommandMySQL', 'getSelect', '(Lorg/apache/empire/db/DBSQLBuilder;)V', '5', 'org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator', 'DBMSHandlerMySQL.java', '0', '99', 'removed call to org/apache/empire/db/DBCommand::getSelect')",{0},{0},,{0},{0},{0}
"('org.apache.empire.dbms.mysql.DBMSHandlerMySQL$DBCommandMySQL', 'getSelect', '(Lorg/apache/empire/db/DBSQLBuilder;)V', '10', 'org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator', 'DBMSHandlerMySQL.java', '1', '101', 'negated conditional')",{0},{0},,{0},{0},{0}
"('org.apache.empire.db.DBQuery$DBQueryExprColumn', 'getUpdateColumn', '()Lorg/apache/empire/db/DBColumn;', '6', 'org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator', 'DBQuery.java', '1', '77', 'replaced return value with null for org/apache/empire/db/DBQuery$DBQueryExprColumn::getUpdateColumn')",{9},{9},{9},{9},,{9}
"('org.apache.empire.db.DBQuery$DBQueryExprColumn', 'equals', '(Ljava/lang/Object;)Z', '48', 'org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator', 'DBQuery.java', '13', '90', 'replaced boolean return with true for org/apache/empire/db/DBQuery$DBQueryExprColumn::equals')","{9, 10}","{9, 10}","{9, 10}","{9, 10}",,"{9, 10}"
"('org.apache.empire.db.DBQuery$DBQueryExprColumn', 'equals', '(Ljava/lang/Object;)Z', '10', 'org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator', 'DBQuery.java', '2', '84', 'replaced boolean return with false for org/apache/empire/db/DBQuery$DBQueryExprColumn::equals')",{10},{10},{10},{10},,{10}
"('org.apache.empire.db.DBQuery$DBQueryExprColumn', 'equals', '(Ljava/lang/Object;)Z', '16', 'org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator', 'DBQuery.java', '3', '85', 'negated conditional')","{9, 10}","{9, 10}","{9, 10}","{9, 10}",,"{9, 10}"
"('org.apache.empire.db.DBQuery$DBQueryExprColumn', 'equals', '(Ljava/lang/Object;)Z', '6', 'org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator', 'DBQuery.java', '1', '83', 'negated conditional')","{9, 10}","{9, 10}","{9, 10}","{9, 10}",,"{9, 10}"
"('org.apache.empire.exceptions.EmpireException', '<init>', '(Lorg/apache/empire/commons/ErrorType;[Ljava/lang/String;Ljava/lang/Throwable;)V', '24', 'org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator', 'EmpireException.java', '2', '144', 'removed call to org/apache/empire/exceptions/EmpireException::log')","{98, 71}","{98, 71}","{98, 71}","{98, 71}",,
"('org.apache.empire.exceptions.EmpireException', 'getErrorParams', '()[Ljava/lang/String;', '5', 'org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator', 'EmpireException.java', '0', '181', 'replaced return value with null for org/apache/empire/exceptions/EmpireException::getErrorParams')",{98},{98},{98},{98},,
"('org.apache.empire.commons.ErrorType', '<init>', '(Ljava/lang/String;Ljava/lang/String;)V', '39', 'org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator', 'ErrorType.java', '9', '59', 'negated conditional')","{98, 102, 71}","{98, 102, 71}",,"{98, 102, 71}","{98, 102, 71}","{98, 102, 71}"
"('org.apache.empire.exceptions.InternalException', 'paramsFromThrowable', '(Ljava/lang/Throwable;)[Ljava/lang/String;', '65', 'org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator', 'InternalException.java', '14', '46', 'replaced return value with null for org/apache/empire/exceptions/InternalException::paramsFromThrowable')",{98},{98},,{98},{98},
"('org.apache.empire.exceptions.InternalException', 'paramsFromThrowable', '(Ljava/lang/Throwable;)[Ljava/lang/String;', '12', 'org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator', 'InternalException.java', '3', '38', 'negated conditional')",{98},{98},,{98},{98},
"('org.apache.empire.exceptions.InternalException', 'paramsFromThrowable', '(Ljava/lang/Throwable;)[Ljava/lang/String;', '37', 'org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator', 'InternalException.java', '10', '44', 'changed conditional boundary')",{98},{98},,{98},{98},
"('org.apache.empire.exceptions.InternalException', 'paramsFromThrowable', '(Ljava/lang/Throwable;)[Ljava/lang/String;', '37', 'org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator', 'InternalException.java', '10', '44', 'negated conditional')",{98},{98},,{98},{98},
"('org.apache.empire.exceptions.InternalException', 'paramsFromThrowable', '(Ljava/lang/Throwable;)[Ljava/lang/String;', '34', 'org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator', 'InternalException.java', '9', '44', 'negated conditional')",{98},{98},,{98},{98},
"('org.apache.empire.db.expr.compare.DBCompareExpr', 'or', '(Lorg/apache/empire/db/expr/compare/DBCompareExpr;)Lorg/apache/empire/db/expr/compare/DBCompareAndOrExpr;', '9', 'org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator', 'DBCompareExpr.java', '1', '59', 'replaced return value with null for org/apache/empire/db/expr/compare/DBCompareExpr::or')",{3},{3},,,{3},
"('org.apache.empire.db.expr.compare.DBCompareParenthesisExpr', 'isWrapper', '()Z', '4', 'org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanFalseReturnValsMutator', 'DBCompareParenthesisExpr.java', '0', '48', 'replaced boolean return with false for org/apache/empire/db/expr/compare/DBCompareParenthesisExpr::isWrapper')",,{3},{3},{3},{3},
"('org.apache.empire.db.expr.compare.DBCompareParenthesisExpr', 'unwrap', '()Lorg/apache/empire/db/expr/compare/DBCompareExpr;', '5', 'org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator', 'DBCompareParenthesisExpr.java', '0', '54', 'replaced return value with null for org/apache/empire/db/expr/compare/DBCompareParenthesisExpr::unwrap')",,{3},{3},{3},{3},
"('org.apache.empire.commons.Attributes$EmptyIterator', 'hasNext', '()Z', '4', 'org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator', 'Attributes.java', '0', '91', 'replaced boolean return with true for org/apache/empire/commons/Attributes$EmptyIterator::hasNext')",,,{3},{3},,
