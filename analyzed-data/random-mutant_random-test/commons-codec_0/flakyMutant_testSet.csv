mutant(except tests),round-0,round-1,round-2,round-3,round-4,round-5
"('org.apache.commons.codec.binary.Base64', 'encode', '([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V', '109', 'org.pitest.mutationtest.engine.gregor.mutators.MathMutator', 'Base64.java', '10', '849', 'Replaced integer addition with subtraction')","{128, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 161, 162, 163, 167, 170, 120, 124, 126, 127}","{128, 129, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 161, 162, 163, 167, 170, 120, 124, 126, 127}","{128, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 161, 162, 163, 167, 170, 120, 124, 126, 127}","{128, 129, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 161, 162, 163, 167, 170, 120, 124, 126, 127}","{128, 129, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 161, 162, 163, 167, 170, 120, 124, 126, 127}","{128, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 161, 162, 163, 167, 170, 120, 124, 126, 127}"
"('org.apache.commons.codec.binary.Base64', 'encode', '([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V', '92', 'org.pitest.mutationtest.engine.gregor.mutators.MathMutator', 'Base64.java', '9', '846', 'Replaced bitwise AND with OR')","{128, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 160, 161, 162, 163, 167, 170, 120, 124, 126, 127}","{128, 129, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 160, 161, 162, 163, 167, 170, 120, 124, 126, 127}","{128, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 160, 161, 162, 163, 167, 170, 120, 124, 126, 127}","{128, 129, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 160, 161, 162, 163, 167, 170, 120, 124, 126, 127}","{128, 129, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 160, 161, 162, 163, 167, 170, 120, 124, 126, 127}","{128, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 160, 161, 162, 163, 167, 170, 120, 124, 126, 127}"
"('org.apache.commons.codec.binary.Base64', 'encode', '([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V', '72', 'org.pitest.mutationtest.engine.gregor.mutators.MathMutator', 'Base64.java', '9', '844', 'Replaced bitwise AND with OR')","{128, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 160, 161, 162, 163, 167, 170, 120, 124, 126, 127}","{128, 129, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 160, 161, 162, 163, 167, 170, 120, 124, 126, 127}","{128, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 160, 161, 162, 163, 167, 170, 120, 124, 126, 127}","{128, 129, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 160, 161, 162, 163, 167, 170, 120, 124, 126, 127}","{128, 129, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 160, 161, 162, 163, 167, 170, 120, 124, 126, 127}","{128, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 160, 161, 162, 163, 167, 170, 120, 124, 126, 127}"
"('org.apache.commons.codec.binary.Base64', 'encode', '([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V', '63', 'org.pitest.mutationtest.engine.gregor.mutators.MathMutator', 'Base64.java', '9', '844', 'Replaced integer addition with subtraction')","{128, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 160, 161, 162, 163, 167, 170, 120, 124, 126, 127}","{128, 129, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 160, 161, 162, 163, 167, 170, 120, 124, 126, 127}","{128, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 160, 161, 162, 163, 167, 170, 120, 124, 126, 127}","{128, 129, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 160, 161, 162, 163, 167, 170, 120, 124, 126, 127}","{128, 129, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 160, 161, 162, 163, 167, 170, 120, 124, 126, 127}","{128, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 160, 161, 162, 163, 167, 170, 120, 124, 126, 127}"
"('org.apache.commons.codec.binary.Base64', 'decode', '([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V', '209', 'org.pitest.mutationtest.engine.gregor.mutators.MathMutator', 'Base64.java', '22', '789', 'Replaced Shift Right with Shift Left')","{128, 130, 133, 134, 141, 149, 152, 160, 162, 163, 170, 171, 172, 174, 178, 188, 189, 194, 200, 206, 214, 216, 218, 219, 220, 222, 120, 124, 126}","{128, 129, 130, 133, 134, 141, 149, 152, 160, 162, 163, 170, 171, 172, 174, 178, 188, 189, 194, 200, 206, 214, 216, 218, 219, 220, 222, 120, 124, 126}","{128, 130, 133, 134, 141, 149, 152, 160, 162, 163, 170, 171, 172, 174, 178, 188, 189, 194, 200, 206, 214, 216, 218, 219, 220, 222, 120, 124, 126}","{128, 129, 130, 133, 134, 141, 149, 152, 160, 162, 163, 170, 171, 172, 174, 178, 188, 189, 194, 200, 206, 214, 216, 218, 219, 220, 222, 120, 124, 126}","{128, 129, 130, 133, 134, 141, 149, 152, 160, 162, 163, 170, 171, 172, 174, 178, 188, 189, 194, 200, 206, 214, 216, 218, 219, 220, 222, 120, 124, 126}","{128, 130, 133, 134, 141, 149, 152, 160, 162, 163, 170, 171, 172, 174, 178, 188, 189, 194, 200, 206, 214, 216, 218, 219, 220, 222, 120, 124, 126}"
"('org.apache.commons.codec.binary.Base64', 'encode', '([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V', '122', 'org.pitest.mutationtest.engine.gregor.mutators.MathMutator', 'Base64.java', '10', '850', 'Replaced integer addition with subtraction')","{128, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 161, 162, 163, 167, 170, 120, 124, 126, 127}","{128, 129, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 161, 162, 163, 167, 170, 120, 124, 126, 127}","{128, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 161, 162, 163, 167, 170, 120, 124, 126, 127}","{128, 129, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 161, 162, 163, 167, 170, 120, 124, 126, 127}","{128, 129, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 161, 162, 163, 167, 170, 120, 124, 126, 127}","{128, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 161, 162, 163, 167, 170, 120, 124, 126, 127}"
"('org.apache.commons.codec.binary.Base64', 'decode', '([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V', '202', 'org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator', 'Base64.java', '21', '788', 'removed call to org/apache/commons/codec/binary/Base64::validateCharacter')","{128, 130, 133, 134, 141, 149, 152, 160, 162, 163, 170, 171, 172, 174, 178, 188, 189, 194, 200, 206, 209, 210, 214, 216, 218, 219, 220, 222, 120, 124, 126}","{128, 129, 130, 133, 134, 141, 149, 152, 160, 162, 163, 170, 171, 172, 174, 178, 188, 189, 194, 200, 206, 209, 210, 214, 216, 218, 219, 220, 222, 120, 124, 126}","{128, 130, 133, 134, 141, 149, 152, 160, 162, 163, 170, 171, 172, 174, 178, 188, 189, 194, 200, 206, 209, 210, 214, 216, 218, 219, 220, 222, 120, 124, 126}","{128, 129, 130, 133, 134, 141, 149, 152, 160, 162, 163, 170, 171, 172, 174, 178, 188, 189, 194, 200, 206, 209, 210, 214, 216, 218, 219, 220, 222, 120, 124, 126}","{128, 129, 130, 133, 134, 141, 149, 152, 160, 162, 163, 170, 171, 172, 174, 178, 188, 189, 194, 200, 206, 209, 210, 214, 216, 218, 219, 220, 222, 120, 124, 126}","{128, 130, 133, 134, 141, 149, 152, 160, 162, 163, 170, 171, 172, 174, 178, 188, 189, 194, 200, 206, 209, 210, 214, 216, 218, 219, 220, 222, 120, 124, 126}"
"('org.apache.commons.codec.binary.Base64', 'decode', '([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V', '219', 'org.pitest.mutationtest.engine.gregor.mutators.MathMutator', 'Base64.java', '22', '790', 'Replaced integer addition with subtraction')","{128, 130, 133, 134, 141, 149, 152, 160, 162, 163, 170, 171, 172, 174, 178, 188, 189, 194, 200, 206, 214, 216, 218, 219, 220, 222, 120, 124, 126}","{128, 129, 130, 133, 134, 141, 149, 152, 160, 162, 163, 170, 171, 172, 174, 178, 188, 189, 194, 200, 206, 214, 216, 218, 219, 220, 222, 120, 124, 126}","{128, 130, 133, 134, 141, 149, 152, 160, 162, 163, 170, 171, 172, 174, 178, 188, 189, 194, 200, 206, 214, 216, 218, 219, 220, 222, 120, 124, 126}","{128, 129, 130, 133, 134, 141, 149, 152, 160, 162, 163, 170, 171, 172, 174, 178, 188, 189, 194, 200, 206, 214, 216, 218, 219, 220, 222, 120, 124, 126}","{128, 129, 130, 133, 134, 141, 149, 152, 160, 162, 163, 170, 171, 172, 174, 178, 188, 189, 194, 200, 206, 214, 216, 218, 219, 220, 222, 120, 124, 126}","{128, 130, 133, 134, 141, 149, 152, 160, 162, 163, 170, 171, 172, 174, 178, 188, 189, 194, 200, 206, 214, 216, 218, 219, 220, 222, 120, 124, 126}"
"('org.apache.commons.codec.binary.Base64', 'encode', '([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V', '70', 'org.pitest.mutationtest.engine.gregor.mutators.MathMutator', 'Base64.java', '9', '844', 'Replaced Shift Right with Shift Left')","{128, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 160, 161, 162, 163, 167, 170, 120, 124, 126, 127}","{128, 129, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 160, 161, 162, 163, 167, 170, 120, 124, 126, 127}","{128, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 160, 161, 162, 163, 167, 170, 120, 124, 126, 127}","{128, 129, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 160, 161, 162, 163, 167, 170, 120, 124, 126, 127}","{128, 129, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 160, 161, 162, 163, 167, 170, 120, 124, 126, 127}","{128, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 160, 161, 162, 163, 167, 170, 120, 124, 126, 127}"
"('org.apache.commons.codec.binary.Base64', 'encode', '([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V', '27', 'org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator', 'Base64.java', '4', '834', 'negated conditional')","{128, 129, 133, 135, 137, 138, 141, 142, 144, 146, 149, 150, 151, 152, 155, 156, 158, 160, 163, 164, 165, 166, 179, 180, 185, 192, 193, 195, 126}","{128, 129, 133, 135, 137, 138, 141, 142, 144, 146, 149, 150, 151, 152, 155, 156, 158, 160, 163, 164, 165, 166, 179, 180, 185, 192, 193, 195, 126}","{128, 129, 133, 135, 137, 138, 141, 142, 144, 146, 149, 150, 151, 152, 155, 156, 158, 160, 163, 164, 165, 166, 179, 180, 185, 192, 193, 195, 126}","{128, 129, 133, 135, 137, 138, 141, 142, 144, 146, 149, 150, 151, 152, 155, 156, 158, 160, 163, 164, 165, 166, 179, 180, 185, 192, 193, 195, 126}","{128, 133, 135, 137, 138, 141, 142, 144, 146, 149, 150, 151, 152, 155, 156, 158, 160, 163, 164, 165, 166, 179, 180, 185, 192, 193, 195, 126}","{128, 129, 133, 135, 137, 138, 141, 142, 144, 146, 149, 150, 151, 152, 155, 156, 158, 160, 163, 164, 165, 166, 179, 180, 185, 192, 193, 195, 126}"
"('org.apache.commons.codec.binary.Base64', 'encode', '([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V', '90', 'org.pitest.mutationtest.engine.gregor.mutators.MathMutator', 'Base64.java', '9', '846', 'Replaced Shift Left with Shift Right')","{128, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 160, 161, 162, 163, 167, 170, 120, 124, 126, 127}","{128, 129, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 160, 161, 162, 163, 167, 170, 120, 124, 126, 127}","{128, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 160, 161, 162, 163, 167, 170, 120, 124, 126, 127}","{128, 129, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 160, 161, 162, 163, 167, 170, 120, 124, 126, 127}","{128, 129, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 160, 161, 162, 163, 167, 170, 120, 124, 126, 127}","{128, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 160, 161, 162, 163, 167, 170, 120, 124, 126, 127}"
"('org.apache.commons.codec.binary.Base64', 'encode', '([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V', '83', 'org.pitest.mutationtest.engine.gregor.mutators.MathMutator', 'Base64.java', '9', '846', 'Replaced integer addition with subtraction')","{128, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 160, 161, 162, 163, 167, 170, 120, 124, 126, 127}","{128, 129, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 160, 161, 162, 163, 167, 170, 120, 124, 126, 127}","{128, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 160, 161, 162, 163, 167, 170, 120, 124, 126, 127}","{128, 129, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 160, 161, 162, 163, 167, 170, 120, 124, 126, 127}","{128, 129, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 160, 161, 162, 163, 167, 170, 120, 124, 126, 127}","{128, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 160, 161, 162, 163, 167, 170, 120, 124, 126, 127}"
"('org.apache.commons.codec.binary.Base64', 'encode', '([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V', '100', 'org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator', 'Base64.java', '9', '848', 'negated conditional')","{128, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 160, 161, 162, 163, 167, 170, 120, 124, 126, 127}","{128, 129, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 160, 161, 162, 163, 167, 170, 120, 124, 126, 127}","{128, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 160, 161, 162, 163, 167, 170, 120, 124, 126, 127}","{128, 129, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 160, 161, 162, 163, 167, 170, 120, 124, 126, 127}","{128, 129, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 160, 161, 162, 163, 167, 170, 120, 124, 126, 127}","{128, 130, 133, 134, 135, 136, 138, 141, 142, 144, 147, 149, 151, 152, 156, 160, 161, 162, 163, 167, 170, 120, 124, 126, 127}"
"('org.apache.commons.codec.binary.Base64', 'decode', '([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V', '224', 'org.pitest.mutationtest.engine.gregor.mutators.MathMutator', 'Base64.java', '22', '790', 'Replaced bitwise AND with OR')","{128, 130, 133, 134, 141, 149, 152, 160, 162, 163, 170, 171, 172, 174, 178, 188, 189, 194, 200, 206, 214, 216, 218, 219, 220, 222, 120, 124, 126}","{128, 129, 130, 133, 134, 141, 149, 152, 160, 162, 163, 170, 171, 172, 174, 178, 188, 189, 194, 200, 206, 214, 216, 218, 219, 220, 222, 120, 124, 126}","{128, 130, 133, 134, 141, 149, 152, 160, 162, 163, 170, 171, 172, 174, 178, 188, 189, 194, 200, 206, 214, 216, 218, 219, 220, 222, 120, 124, 126}","{128, 129, 130, 133, 134, 141, 149, 152, 160, 162, 163, 170, 171, 172, 174, 178, 188, 189, 194, 200, 206, 214, 216, 218, 219, 220, 222, 120, 124, 126}","{128, 129, 130, 133, 134, 141, 149, 152, 160, 162, 163, 170, 171, 172, 174, 178, 188, 189, 194, 200, 206, 214, 216, 218, 219, 220, 222, 120, 124, 126}","{128, 130, 133, 134, 141, 149, 152, 160, 162, 163, 170, 171, 172, 174, 178, 188, 189, 194, 200, 206, 214, 216, 218, 219, 220, 222, 120, 124, 126}"
"('org.apache.commons.codec.binary.BaseNCodec', 'ensureBufferSize', '(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B', '46', 'org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator', 'BaseNCodec.java', '6', '673', 'replaced return value with null for org/apache/commons/codec/binary/BaseNCodec::ensureBufferSize')","{129, 130, 552, 553, 554, 136, 143}","{129, 130, 552, 553, 554, 136, 143}","{129, 130, 552, 553, 554, 136, 143}","{129, 130, 552, 553, 554, 136, 143}","{130, 552, 553, 554, 136, 143}","{129, 130, 552, 553, 554, 136, 143}"
"('org.apache.commons.codec.binary.BaseNCodec', 'ensureBufferSize', '(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B', '44', 'org.pitest.mutationtest.engine.gregor.mutators.MathMutator', 'BaseNCodec.java', '5', '673', 'Replaced integer addition with subtraction')","{129, 130, 136, 553, 554, 552, 143, 559}","{129, 130, 552, 553, 554, 136, 559, 143}","{129, 130, 136, 553, 554, 552, 143, 559}","{129, 130, 552, 553, 554, 136, 143, 559}","{130, 136, 553, 552, 554, 559, 143}","{129, 130, 136, 553, 554, 552, 143, 559}"
"('org.apache.commons.codec.binary.BaseNCodec', 'resizeBuffer', '(Lorg/apache/commons/codec/binary/BaseNCodec$Context;I)[B', '51', 'org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator', 'BaseNCodec.java', '8', '364', 'replaced return value with null for org/apache/commons/codec/binary/BaseNCodec::resizeBuffer')","{129, 130, 552, 553, 554, 136, 143}","{129, 130, 136, 553, 554, 552, 143}","{129, 130, 552, 553, 554, 136, 143}","{129, 130, 136, 553, 554, 552, 143}","{130, 136, 553, 554, 552, 143}","{129, 130, 552, 553, 554, 136, 143}"
"('org.apache.commons.codec.binary.BaseNCodec', 'resizeBuffer', '(Lorg/apache/commons/codec/binary/BaseNCodec$Context;I)[B', '18', 'org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator', 'BaseNCodec.java', '1', '356', 'changed conditional boundary')","{129, 130, 552, 136, 554, 553, 143, 559}","{129, 130, 552, 553, 554, 136, 559, 143}","{129, 130, 552, 136, 554, 553, 143, 559}","{129, 130, 552, 553, 554, 136, 559, 143}","{130, 136, 553, 554, 552, 559, 143}","{129, 130, 552, 136, 554, 553, 143, 559}"
"('org.apache.commons.codec.binary.BaseNCodec', 'resizeBuffer', '(Lorg/apache/commons/codec/binary/BaseNCodec$Context;I)[B', '18', 'org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator', 'BaseNCodec.java', '1', '356', 'negated conditional')","{129, 130, 136, 553, 552, 554, 143, 559}","{129, 130, 552, 136, 554, 553, 143, 559}","{129, 130, 136, 553, 552, 554, 143, 559}","{129, 130, 552, 136, 554, 553, 559, 143}","{130, 552, 136, 554, 553, 559, 143}","{129, 130, 136, 553, 552, 554, 143, 559}"
"('org.apache.commons.codec.binary.BaseNCodec', 'resizeBuffer', '(Lorg/apache/commons/codec/binary/BaseNCodec$Context;I)[B', '11', 'org.pitest.mutationtest.engine.gregor.mutators.MathMutator', 'BaseNCodec.java', '0', '355', 'Replaced integer multiplication with division')","{129, 130, 136, 553, 552, 554, 559, 143}","{129, 130, 552, 136, 554, 553, 143, 559}","{129, 130, 136, 553, 552, 554, 559, 143}","{129, 130, 552, 136, 554, 553, 143, 559}","{130, 136, 553, 552, 554, 559, 143}","{129, 130, 136, 553, 552, 554, 559, 143}"
"('org.apache.commons.codec.binary.BaseNCodec', 'resizeBuffer', '(Lorg/apache/commons/codec/binary/BaseNCodec$Context;I)[B', '29', 'org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator', 'BaseNCodec.java', '4', '359', 'negated conditional')","{129, 130, 552, 553, 136, 554, 143, 559}","{129, 130, 136, 553, 552, 554, 143, 559}","{129, 130, 552, 553, 136, 554, 143, 559}","{129, 130, 136, 553, 552, 554, 559, 143}","{130, 136, 553, 552, 554, 559, 143}","{129, 130, 552, 553, 136, 554, 143, 559}"
"('org.apache.commons.codec.binary.BaseNCodec', 'resizeBuffer', '(Lorg/apache/commons/codec/binary/BaseNCodec$Context;I)[B', '29', 'org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator', 'BaseNCodec.java', '4', '359', 'changed conditional boundary')","{129, 130, 552, 553, 554, 136, 143, 559}","{129, 130, 136, 553, 554, 552, 559, 143}","{129, 130, 552, 553, 554, 136, 143, 559}","{129, 130, 136, 553, 554, 552, 143, 559}","{130, 552, 553, 554, 136, 143, 559}","{129, 130, 552, 553, 554, 136, 143, 559}"
"('org.apache.commons.codec.binary.Hex', 'encodeHex', '([BIIZ)[C', '14', 'org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator', 'Hex.java', '2', '179', 'replaced return value with null for org/apache/commons/codec/binary/Hex::encodeHex')","{833, 1059}",,"{833, 1059}","{833, 1059}","{833, 1059}","{833, 1059}"
"('org.apache.commons.codec.binary.Hex', 'toString', '()Ljava/lang/String;', '17', 'org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator', 'Hex.java', '7', '564', 'replaced return value with """" for org/apache/commons/codec/binary/Hex::toString')","{1262, 1263}",,"{1262, 1263}","{1262, 1263}","{1262, 1263}","{1262, 1263}"
"('org.apache.commons.codec.StringEncoderComparator', 'compare', '(Ljava/lang/Object;Ljava/lang/Object;)I', '42', 'org.pitest.mutationtest.engine.gregor.mutators.returns.PrimitiveReturnsMutator', 'StringEncoderComparator.java', '5', '86', 'replaced int return with 0 for org/apache/commons/codec/StringEncoderComparator::compare')","{12, 21, 1343}",,"{12, 21, 1343}",,,"{12, 21, 1343}"
"('org.apache.commons.codec.language.bm.RuleType', 'getName', '()Ljava/lang/String;', '5', 'org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator', 'RuleType.java', '0', '54', 'replaced return value with """" for org/apache/commons/codec/language/bm/RuleType::getName')","{513, 514}",,,,"{513, 514}",
"('org.apache.commons.codec.cli.Digest', '<init>', '([Ljava/lang/String;)V', '18', 'org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator', 'Digest.java', '2', '64', 'negated conditional')",,{1424},{1424},{1424},,
"('org.apache.commons.codec.binary.Base64$Builder', 'get', '()Lorg/apache/commons/codec/binary/Base64;', '17', 'org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator', 'Base64.java', '6', '88', 'replaced return value with null for org/apache/commons/codec/binary/Base64$Builder::get')",,"{224, 161, 212, 150, 120}","{224, 161, 212, 150, 120}",,"{224, 161, 212, 150, 120}","{224, 161, 212, 150, 120}"
"('org.apache.commons.codec.binary.Base64$Builder', 'setUrlSafe', '(Z)Lorg/apache/commons/codec/binary/Base64$Builder;', '8', 'org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator', 'Base64.java', '2', '98', 'replaced return value with null for org/apache/commons/codec/binary/Base64$Builder::setUrlSafe')",,{212},{212},,{212},{212}
"('org.apache.commons.codec.language.bm.NameType', 'getName', '()Ljava/lang/String;', '5', 'org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator', 'NameType.java', '0', '56', 'replaced return value with """" for org/apache/commons/codec/language/bm/NameType::getName')",,"{513, 514, 1339}","{513, 514, 1339}",,,
"('org.apache.commons.codec.digest.MessageDigestAlgorithms', 'values', '()[Ljava/lang/String;', '57', 'org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator', 'MessageDigestAlgorithms.java', '0', '156', 'replaced return value with null for org/apache/commons/codec/digest/MessageDigestAlgorithms::values')",,"{353, 289, 323, 325, 397, 366, 270, 337, 283}","{289, 353, 323, 325, 397, 270, 366, 337, 283}","{289, 353, 323, 325, 397, 366, 270, 337, 283}","{353, 289, 323, 325, 397, 366, 270, 337, 283}","{353, 289, 323, 325, 397, 270, 366, 337, 283}"
"('org.apache.commons.codec.binary.Base32$Builder', 'get', '()Lorg/apache/commons/codec/binary/Base32;', '17', 'org.pitest.mutationtest.engine.gregor.mutators.returns.NullReturnValsMutator', 'Base32.java', '6', '75', 'replaced return value with null for org/apache/commons/codec/binary/Base32$Builder::get')",,,"{104, 69, 71}",,"{104, 69, 71}",
"('org.apache.commons.codec.binary.BaseNCodec$Context', 'toString', '()Ljava/lang/String;', '67', 'org.pitest.mutationtest.engine.gregor.mutators.returns.EmptyObjectReturnValsMutator', 'BaseNCodec.java', '11', '218', 'replaced return value with """" for org/apache/commons/codec/binary/BaseNCodec$Context::toString')",,,,,{571},
